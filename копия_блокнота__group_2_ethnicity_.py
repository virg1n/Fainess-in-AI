# -*- coding: utf-8 -*-
"""Копия блокнота "group-2-ethnicity"

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VQilVI_QhQx1HD2D0BcG0GqW5FfcA3zT
"""

from google.colab import drive
drive.mount('/content/drive')

from collections import Counter
import matplotlib.pyplot as plt
import numpy as np
import csv
import pandas as pd

gender_test_counter = []
race_test_counter = []
age_test_counter = []

gender = []
race = []
age = [] #            0: 0-3	 1: 4-19		2: 20-39		3: 40-69		4: 70+

def getInfo():
    for i in range(1, 3069):
        if i < 10:
            file = open(f'./manual/test_000{i}_manu_attri.txt', 'r')
        elif i < 100:
            file = open(f'./manual/test_00{i}_manu_attri.txt', 'r')
        elif i < 1000:
            file = open(f'./manual/test_0{i}_manu_attri.txt', 'r')
        else:
            file = open(f'./manual/test_{i}_manu_attri.txt', 'r')

        content = file.readlines()
        
        gender.append(content[5])
        race.append(content[6])
        age.append(content[7])


        gender_test_counter.append(content[5])
        race_test_counter.append(content[6])
        age_test_counter.append(content[7])
    test_gender = np.array([Counter(gender_test_counter)['0\n'], Counter(gender_test_counter)['1\n'], Counter(gender_test_counter)['2\n']])
    test_race = np.array([Counter(race_test_counter)['0\n'], Counter(race_test_counter)['1\n'], Counter(race_test_counter)['2\n']])
    test_age = np.array([Counter(age_test_counter)['0\n'], Counter(age_test_counter)['1\n'], Counter(age_test_counter)['2\n']+1, Counter(age_test_counter)['3\n']+1, Counter(age_test_counter)['4\n']])

    for i in range(1, 12272):
        if i < 10:
            file = open(f'./manual/train_0000{i}_manu_attri.txt', 'r')
        elif i < 100:
            file = open(f'./manual/train_000{i}_manu_attri.txt', 'r')
        elif i < 1000:
            file = open(f'./manual/train_00{i}_manu_attri.txt', 'r')
        elif i < 10000:
            file = open(f'./manual/train_0{i}_manu_attri.txt', 'r')
        else:
            file = open(f'./manual/train_{i}_manu_attri.txt', 'r')
        content = file.readlines()
        gender.append(content[5])
        race.append(content[6])
        age.append(content[7])
        
    total_gender = np.array([Counter(gender)['0\n'], Counter(gender)['1\n'], Counter(gender)['2\n']])
    total_race = np.array([Counter(race)['0\n'], Counter(race)['1\n'], Counter(race)['2\n']])
    total_age = np.array([Counter(age)['0\n'], Counter(age)['1\n'], Counter(age)['2\n']+1, Counter(age)['3\n']+1, Counter(age)['4\n']])
    return (total_gender, total_race, total_age, test_gender, test_race, test_age)

# I calculated it on local machine

test_gender = np.array([1249, 1620, 199])
test_race = np.array([2351, 234, 483])
test_age = np.array([329, 486, 1662, 502, 89])


total_gender = np.array([6206, 8182, 951])
total_race = np.array([11742, 1202, 2395])
total_age = np.array([1612, 2656, 8193, 2422, 455])

fig, axs = plt.subplots(1, 3, figsize=(10, 5))
axs[0].pie(test_gender, labels=["male - " + str(test_gender[0]), "female - " + str(test_gender[1]), "unsure - " + str(test_gender[2])],autopct='%1.1f%%')
axs[1].pie(test_race, labels=["Caucasian - " + str(test_race[0]), "African-American - " + str(test_race[1]), "Asian - " + str(test_race[2])], autopct='%1.1f%%')
axs[2].pie(test_age, labels=["0-3 - " + str(total_age[0]), "4-19 - " + str(total_age[0]), "20-39 - " + str(total_age[0]), "40-69 - " + str(total_age[0]), "70+ - " + str(total_age[0])], autopct='%.1f%%')
plt.title("RAF DB test")
plt.show()

fig, axs = plt.subplots(1, 3, figsize=(10, 10))
axs[0].pie(total_gender, labels=["male - " + str(total_gender[0]), "female - " + str(total_gender[1]), "unsure - " + str(total_gender[2])],autopct='%1.1f%%')
axs[1].pie(total_race, labels=["Caucasian - " + str(total_race[0]), "African-American - " + str(total_race[1]), "Asian - " + str(total_race[2])], autopct='%1.1f%%')
axs[2].pie(total_age, labels=["0-3 - " + str(total_age[0]), "4-19 - " + str(total_age[1]), "20-39 - " + str(total_age[2]), "40-69 - " + str(total_age[3]), "70+ - " + str(total_age[4])], autopct='%1.1f%%')
plt.title("RAF DB Total")
plt.show()

def AgeToCsv(age):
    if age == '0' or age == 0:
        return "0-3"
    elif age == '1' or age == 1:
        return "4-19"
    elif age == '2' or age == 2:
        return "20-39"
    elif age == '3' or age == 3:
        return "40-69"
    else:
        return "70+"


def writeInfoToCSV():
    rows = []
    for i in range(1, 3069):
        if i < 10:
            file = open(f'./manual/test_000{i}_manu_attri.txt', 'r')
            filename = f"test_000{i}_aligned"
        elif i < 100:
            filename = f"test_00{i}_aligned"
            file = open(f'./manual/test_00{i}_manu_attri.txt', 'r')
        elif i < 1000:
            filename = f"test_0{i}_aligned"
            file = open(f'./manual/test_0{i}_manu_attri.txt', 'r')
        else:
            filename = f"test_{i}_aligned"
            file = open(f'./manual/test_{i}_manu_attri.txt', 'r')

        content = file.readlines()
        rows.append([filename+".jpg", content[5].replace('0', 'male').replace('1','female').replace('2', 'unsure').replace("\n", ""), content[6].replace('0','Caucasian').replace("1","African-American").replace("2","Asian").replace("\n", ""), AgeToCsv(content[7].replace('\n', '').replace(" ","")), AgeToCsv(content[7].replace('\n', '').replace(" ","")), "test"])
        gender.append(content[5])
        race.append(content[6])
        age.append(content[7])


        gender_test_counter.append(content[5])
        race_test_counter.append(content[6])
        age_test_counter.append(content[7])
        test_gender = np.array([Counter(gender_test_counter)['0\n'], Counter(gender_test_counter)['1\n'], Counter(gender_test_counter)['2\n']])
        test_race = np.array([Counter(race_test_counter)['0\n'], Counter(race_test_counter)['1\n'], Counter(race_test_counter)['2\n']])
        test_age = np.array([Counter(age_test_counter)['0\n'], Counter(age_test_counter)['1\n'], Counter(age_test_counter)['2\n']+1, Counter(age_test_counter)['3\n']+1, Counter(age_test_counter)['4\n']])

    for i in range(1, 12272):
        if i < 10:
            file = open(f'./manual/train_0000{i}_manu_attri.txt', 'r')
            filename = f"train_0000{i}_aligned"
        elif i < 100:
            file = open(f'./manual/train_000{i}_manu_attri.txt', 'r')
            filename = f"train_000{i}_aligned"
        elif i < 1000:
            file = open(f'./manual/train_00{i}_manu_attri.txt', 'r')
            filename = f"train_00{i}_aligned"
        elif i < 10000:
            file = open(f'./manual/train_0{i}_manu_attri.txt', 'r')
            filename = f"train_0{i}_aligned"
        else:
            file = open(f'./manual/train_{i}_manu_attri.txt', 'r')
            filename = f"train_{i}_aligned"
        content = file.readlines()
        rows.append([filename+".jpg", content[5].replace('0', 'male').replace('1','female').replace('2', 'unsure').replace("\n", ""), content[6].replace('0','Caucasian').replace("1","African-American").replace("2","Asian").replace("\n", ""), AgeToCsv(content[7].replace('\n', '').replace(" ","")), AgeToCsv(content[7].replace('\n', '').replace(" ","")), "train"])
        gender.append(content[5])
        race.append(content[6])
        age.append(content[7])

    filename = "rafdbcsv.csv"
    
    # writing to csv file
    with open(filename, 'w') as csvfile:
        # creating a csv writer object
        csvwriter = csv.writer(csvfile)
        
        # writing the fields
        csvwriter.writerow(["filename", "gender", "race", "age", "age_range", "split"])
        
        # writing the data rows
        csvwriter.writerows(rows)

"""FierFace Dataset"""

# I calculated it on local machine

total_race = np.array([18612, 14990, 13835, 13837, 13789, 12210, 10425])
total_gender = np.array([51778, 45920])
total_age = np.array([28898, 21580, 12097, 11764, 10284, 7024, 3100, 1991, 960])


fig, axs = plt.subplots(1, 3, figsize=(10, 5))
axs[0].pie(total_gender, labels=["Male [" + str(total_gender[0]) + ']', "Female [" + str(total_gender[1]) + ']'],autopct='%1.1f%%')
axs[1].pie(total_race, labels=["White [" + str(total_race[0]) + ']', "Latino_Hispanic [" + str(total_race[1]) + ']', 'Indian [' + str(total_race[2]) + ']', 'East Asian [' + str(total_race[3]) + ']', 'Black [' + str(total_race[4]) + ']', 'Southeast Asian [' + str(total_race[5]) + ']', 'Middle Eastern [' + str(total_race[6]) + ']'], autopct='%1.1f%%')
axs[2].pie(total_age, labels=['20-29 [' + str(total_age[0]) + ']', "30-39 [" + str(total_age[1]) + ']', "40-49 [" + str(total_age[2]) + ']', "3-9 [" + str(total_age[3]) + ']', "10-19 [" + str(total_age[4]) + ']', '50-59 [' + str(total_age[5]) + ']', '60-69 [' + str(total_age[6]) + ']', '0-2 [' + str(total_age[7]) + ']', 'more than 70 [' + str(total_age[8]) + ']'], autopct='%1.1f%%')
plt.title("FairFace Total")
plt.show()

race_val = np.array([2085, 1623, 1516, 1550, 1556, 1415, 1209])
gender_val = np.array([5792, 5162])
age_val = np.array([3300, 2330, 1353, 1356, 1181, 796, 321, 199, 118])


fig, axs = plt.subplots(1, 3, figsize=(10, 5))
axs[0].pie(gender_val, labels=["Male [" + str(gender_val[0]) + ']', "Female [" + str(gender_val[1]) + ']'],autopct='%1.1f%%')
axs[1].pie(race_val, labels=["White [" + str(race_val[0]) + ']', "Latino_Hispanic [" + str(race_val[1]) + ']', 'Indian [' + str(race_val[2]) + ']', 'East Asian [' + str(race_val[3]) + ']', 'Black [' + str(race_val[4]) + ']', 'Southeast Asian [' + str(race_val[5]) + ']', 'Middle Eastern [' + str(race_val[6]) + ']'], autopct='%1.1f%%')
axs[2].pie(age_val, labels=['20-29 [' + str(age_val[0]) + ']', "30-39 [" + str(age_val[1]) + ']', "40-49 [" + str(age_val[2]) + ']', "3-9 [" + str(age_val[3]) + ']', "10-19 [" + str(age_val[4]) + ']', '50-59 [' + str(age_val[5]) + ']', '60-69 [' + str(age_val[6]) + ']', '0-2 [' + str(age_val[7]) + ']', 'more than 70 [' + str(age_val[8]) + ']'], autopct='%1.1f%%')
plt.title("FairFace Validation")
plt.show()

"""UTKFaces Dataset"""





"""Total"""

total = []

Asian = []
AfricanAmerican = []
Caucasian = []
White = []
Black = []
Latino = []
Indian = []
MiddleE = []
Others = []



more70arr, four19arr, zero3arr, dvad39arr, sor69arr = [], [], [], [], []

maleArr, femaleArr = [], []

def UTKToDefault(arr):
  if arr[2] == "0":
      arr[2] = 'White'
  elif arr[2] == "1":
      arr[2] = 'Black'
  elif arr[2] == "3":
      arr[2] = 'Indian'
  elif arr[2] == "2":
      arr[2] = 'Asian'
  else:
      arr[2] = 'Others'

  if arr[1] == "0":
     arr[1] = "male"
  else:
     arr[1] = "female"
  return [arr[0], arr[1], arr[2], arr[3], arr[4], "train"]

def FairFaceToDefault(arr):
  return [arr[0], arr[2], arr[3], arr[1], arr[5], arr[6]]  #file,age,gender,race,service_test,age_range,split 'train/12098.jpg', '40-49', 'Male', 'Middle Eastern', 'True', '40-69', 'train'

with open("./dataset.csv", 'r') as file:
  csvreader = csv.reader(file)
  c = 0
  asian = 0
  aa = 0
  white = 0
  black = 0
  latino = 0
  indian = 0
  me = 0
  oth = 0


  more70, four19, zero3, dvad39, sor69 = 0,0,0,0,0

  male, female = 0,0

  k = 0
  for row in csvreader:
    k += 1
    if row[2] == "0":
        white += 1
    elif row[2] == "1":
        black += 1
    elif row[2] == "3":
        indian += 1
    elif row[2] == "2":
        asian += 1
    elif row[2] == "4":
        oth += 1

    
    if row[4] == "70+":
       more70 += 1
    elif row[4] == "0-3":
       zero3 += 1
    elif row[4] == "20-39":
       dvad39 += 1
    elif row[4] == "4-19":
       four19 += 1
    else:
       sor69 += 1

    if row[1] == "0":
      male += 1
    else:
      female += 1
    total.append(UTKToDefault(row))

  k = k / 100
  Caucasian.append(0)
  Asian.append(asian/k)
  AfricanAmerican.append(aa/k)
  White.append(white/k)
  Black.append(black/k)
  Latino.append(latino/k)
  Indian.append(indian/k)
  MiddleE.append(me/k)
  Others.append(oth/k)


  more70arr.append(more70/k)
  four19arr.append(four19/k)
  zero3arr.append(zero3/k)
  dvad39arr.append(dvad39/k)
  sor69arr.append(sor69/k)

  maleArr.append(male)
  femaleArr.append(female)
    

with open("./rafdbcsv.csv", 'r') as file:
  csvreader = csv.reader(file)
  c = 0
  asian = 0
  aa = 0
  k = 0

  more70, four19, zero3, dvad39, sor69 = 0,0,0,0,0

  male, female = 0,0

  for row in csvreader:
    if row:
        k += 1
        if row[2] == "Caucasian":
          c += 1
        elif row[2] == "Asian":
          asian += 1
        else:
          aa += 1

        if row[4] == "70+":
          more70 += 1
        elif row[4] == "0-3":
          zero3 += 1
        elif row[4] == "20-39":
          dvad39 += 1
        elif row[4] == "4-19":
          four19 += 1
        else:
          sor69 += 1


        if row[1] == "male":
          male += 1
        else:
          female += 1
        total.append(row)
  k = k / 100
  Caucasian.append(c / k)
  Asian.append(asian / k)
  AfricanAmerican.append(aa / k)
  White.append(0)
  Black.append(0)
  Latino.append(0)
  Indian.append(0)
  MiddleE.append(0)
  Others.append(0)


  more70arr.append(more70/k)
  four19arr.append(four19/k)
  zero3arr.append(zero3/k)
  dvad39arr.append(dvad39/k)
  sor69arr.append(sor69/k)

  maleArr.append(male)
  femaleArr.append(female)


with open("./FireFace.csv", 'r') as file:
  csvreader = csv.reader(file)
  c = 0
  asian = 0
  aa = 0
  white = 0
  black = 0
  latino = 0
  indian = 0
  me = 0
  k = 0


  more70, four19, zero3, dvad39, sor69 = 0,0,0,0,0

  male, female = 0,0
  for row in csvreader:
    if row:
        k += 1
        if row[3] == "White":
          white += 1
        elif row[3] == "Black":
          black += 1
        elif row[3] == "Latino_Hispanic":
          latino += 1
        elif row[3] == "Indian":
          indian += 1
        elif row[3] == "East Asian" or row[3] == "Southeast Asian":
          asian += 1
        elif row[3] == "Middle Eastern":
          me += 1


        if row[5] == "70+":
          more70 += 1
        elif row[5] == "0-3":
          zero3 += 1
        elif row[5] == "20-39":
          dvad39 += 1
        elif row[5] == "4-19":
          four19 += 1
        else:
          sor69 += 1

        
        if row[2] == "Male":
          male += 1
        else:
          female += 1

        total.append(FairFaceToDefault(row))
        
  k = k / 100
  Caucasian.append(0)
  Asian.append(asian / k)
  AfricanAmerican.append(aa/k)
  White.append(white/k)
  Black.append(black/k)
  Latino.append(latino/k)
  Indian.append(indian/k)
  MiddleE.append(me/k)
  Others.append(0)



  more70arr.append(more70/k)
  four19arr.append(four19/k)
  zero3arr.append(zero3/k)
  dvad39arr.append(dvad39/k)
  sor69arr.append(sor69/k)


  maleArr.append(male)
  femaleArr.append(female)

filename = "AllDatasets.csv"
fields = ['filename','gender','race','age','age_range','split']

with open(filename, 'w') as csvfile:
    # creating a csv writer object
    csvwriter = csv.writer(csvfile)
     
    # writing the fields
    csvwriter.writerow(fields)
     
    # writing the data rows
    csvwriter.writerows(total)

# I calculated it on local machine


Asian = np.array([14.483951242144332, 15.61277705345502, 26.660457118291895])
AfricanAmerican = np.array([0.0, 7.8422425032594525, 0.0])
White = np.array([42.50706482770256, 0, 19.050348519432134])
Black = np.array([19.089797123455227, 0, 14.113757561489882])
Latino = np.array([0.0, 0, 15.343043429308386])
Indian = np.array([16.76578514488169, 0, 14.160840950265612])
MiddleE = np.array([0.0, 0, 10.670528869282183])
Others = np.array([7.136530431481716, 0, 0])
Caucasian = np.array([0, 76.54498044328552, 0])

width = 0.35
fig, ax = plt.subplots()

labels = ['UTK', 'RAF', 'FireFace']
ax.bar(labels, Asian, width, label='Asian')
ax.bar(labels, AfricanAmerican, width, bottom=Asian,
      label='AfricanAmerican')
ax.bar(labels, White, width, bottom=(AfricanAmerican + Asian),
      label='White')
ax.bar(labels, Black, width, bottom=(White + AfricanAmerican + Asian),
      label='Black')
ax.bar(labels, Latino, width, bottom=(Black + White + AfricanAmerican + Asian),
      label='Latino')
ax.bar(labels, Indian, width, bottom=(Latino + Black + White + AfricanAmerican + Asian),
      label='Indian')
ax.bar(labels, MiddleE, width, bottom=(Indian + Latino + Black + White + AfricanAmerican + Asian),
      label='MiddleE')
ax.bar(labels, Others, width, bottom=(MiddleE + Indian + Latino + Black + White + AfricanAmerican + Asian),
      label='Others')
ax.bar(labels, Caucasian, width, bottom=(Others + MiddleE + Indian + Latino + Black + White + AfricanAmerican + Asian),
      label='Caucasian')

ax.set_ylabel('Ratio')
ax.set_title('Racial compositions in datasets')
ax.legend(loc='center left', bbox_to_anchor=(1, 0.5), title='Races')

plt.show()

more70arr = np.array([5.786832004723944, 2.9661016949152543, 0.9826098527108773])
four19arr = np.array([11.383862668185078, 17.320730117340286, 22.567272950593146])
zero3arr = np.array([7.988527563372559, 10.508474576271187, 2.0378918924451632])
dvad39arr = np.array([50.11177190096588, 53.40938722294654, 51.66685431785382])
sor69arr = np.array([24.72900586275254, 15.795306388526727, 22.745370986396996])

width = 0.35
fig, ax = plt.subplots()

labels = ['UTK', 'RAF', 'FireFace']
ax.bar(labels, zero3arr, width, label='0-3')
ax.bar(labels, four19arr, width, bottom=zero3arr,
      label='4-19')
ax.bar(labels, dvad39arr, width, bottom=(four19arr + zero3arr),
      label='20-39')
ax.bar(labels, sor69arr, width, bottom=(dvad39arr + four19arr + zero3arr),
      label='40-69')
ax.bar(labels, more70arr, width, bottom=(sor69arr + dvad39arr + four19arr + zero3arr),
      label='70+')


ax.set_ylabel('Ratio')
ax.set_title('Age compositions in datasets')
ax.legend(loc='center left', bbox_to_anchor=(1, 0.5), title='Ages')

plt.show()

maleArr = np.array([12391, 6206, 51778])
femaleArr = np.array([11318, 9134, 45921])

width = 0.35
fig, ax = plt.subplots()

labels = ['UTK', 'RAF', 'FireFace']
ax.bar(labels, maleArr, width, label='male')
ax.bar(labels, femaleArr, width, bottom=maleArr,
      label='female')



ax.set_ylabel('Ratio')
ax.set_title('Gender compositions in datasets')
ax.legend(loc='center left', bbox_to_anchor=(1, 0.5), title='Gender')

plt.show()